{"version":3,"file":"highcharts-angular.js.map","sources":["ng://highcharts-angular/lib/highcharts-chart.component.ts","ng://highcharts-angular/lib/highcharts-chart.module.ts"],"sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, Output, NgZone } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\n\r\n@Component({\r\n  selector: 'highcharts-chart',\r\n  template: ''\r\n})\r\nexport class HighchartsChartComponent implements OnDestroy {\r\n  @Input() Highcharts: typeof Highcharts;\r\n  @Input() constructorType: string;\r\n  @Input() callbackFunction: Highcharts.ChartCallbackFunction;\r\n  @Input() oneToOne: boolean; // #20\r\n  @Input() runOutsideAngular: boolean; // #75\r\n\r\n  @Input() set options(val: Highcharts.Options) {\r\n    this.optionsValue = val;\r\n    this.wrappedUpdateOrCreateChart();\r\n  }\r\n  @Input() set update(val: boolean) {\r\n    if (val) {\r\n      this.wrappedUpdateOrCreateChart();\r\n      this.updateChange.emit(false); // clear the flag after update\r\n    }\r\n  }\r\n\r\n  @Output() updateChange = new EventEmitter<boolean>(true);\r\n  @Output() chartInstance = new EventEmitter<Highcharts.Chart>(); // #26\r\n\r\n  private chart: Highcharts.Chart;\r\n  private optionsValue: Highcharts.Options;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private _zone: NgZone // #75\r\n  ) {}\r\n\r\n  wrappedUpdateOrCreateChart() { // #75\r\n    if (this.runOutsideAngular) {\r\n      this._zone.runOutsideAngular(() => {\r\n        this.updateOrCreateChart()\r\n      });\r\n    } else {\r\n      this.updateOrCreateChart();\r\n    }\r\n  }\r\n\r\n  updateOrCreateChart() {\r\n    if (this.chart && this.chart.update) {\r\n      this.chart.update(this.optionsValue, true, this.oneToOne || false);\r\n    } else {\r\n      this.chart = (this.Highcharts as any)[this.constructorType || 'chart'](\r\n        this.el.nativeElement,\r\n        this.optionsValue,\r\n        this.callbackFunction || null\r\n      );\r\n\r\n      // emit chart instance on init\r\n      this.chartInstance.emit(this.chart);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { // #44\r\n    if (this.chart) {  // #56\r\n      this.chart.destroy();\r\n      this.chart = null;\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HighchartsChartComponent} from './highcharts-chart.component';\r\n\r\n@NgModule({\r\n  declarations: [ HighchartsChartComponent ],\r\n  exports: [ HighchartsChartComponent ]\r\n})\r\nexport class HighchartsChartModule {}\r\n"],"names":[],"mappings":";;;;;;;AAAA,MAOa,wBAAwB;;;;;IAwBnC,YACU,IACA;;QADA,OAAE,GAAF,EAAE;QACF,UAAK,GAAL,KAAK;4BARU,IAAI,YAAY,CAAU,IAAI,CAAC;6BAC9B,IAAI,YAAY,EAAoB;KAQ1D;;;;;QApBS,OAAO,CAAC,GAAuB;QAC1C,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,0BAA0B,EAAE,CAAC;;;;;;QAEvB,MAAM,CAAC,GAAY;QAC9B,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;;;;;IAcH,0BAA0B;;QACxB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAA;aAC3B,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;;;;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC;SACpE;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,mBAAC,IAAI,CAAC,UAAiB,GAAE,IAAI,CAAC,eAAe,IAAI,OAAO,CAAC,CACpE,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAC9B,CAAC;;YAGF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC;KACF;;;;IAED,WAAW;;QACT,IAAI,IAAI,CAAC,KAAK,EAAE;;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;KACF;;;YA/DF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE,EAAE;aACb;;;;YANmB,UAAU;YAA0C,MAAM;;;2BAQ3E,KAAK;gCACL,KAAK;iCACL,KAAK;yBACL,KAAK;kCACL,KAAK;wBAEL,KAAK;uBAIL,KAAK;6BAOL,MAAM;8BACN,MAAM;;;;;;;AC1BT,MAOa,qBAAqB;;;YAJjC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAE,wBAAwB,CAAE;gBAC1C,OAAO,EAAE,CAAE,wBAAwB,CAAE;aACtC;;;;;;;;;;;;;;;;;"}
